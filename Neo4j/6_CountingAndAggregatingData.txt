
// How many students studies aboard?
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
RETURN count(s) AS `Students Abroad`


// Find and collect all students with firstname Alia or Colleen who studied aboard and in which country
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
WHERE s.first = 'Alia' OR s.first = 'Colleen'
RETURN count(s.first + ' ' + s.last) AS Name, c.name AS Country


// Find and collect all students with firstname Alia or Colleen who studied aboard and in which country
// Return same output as above but instead of count of student here return collections of names as first column
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
WHERE s.first = 'Alia' OR s.first = 'Colleen'
RETURN collect(s.first + ' ' + s.last) AS Name, c.name AS Country


// Find how many students who studied aboard per country
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
WITH collect(s) AS students, c
RETURN size(students) AS `Number of Students`, c.name AS Country


// Return 10 students in ascending alphabetical order on first name
MATCH(s:Student)
RETURN s.first, s.last ORDER BY s.first LIMIT 10


// Find how many students who studied aboard per country, ordered from highest to lowest
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
WITH collect(s) AS students, c
RETURN size(students) AS Students, c.name AS Country ORDER BY Students DESC


// WITH and WHERE example
// Find countries where at least 150 students studied there
MATCH(s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
WITH collect(s) AS students, c WHERE size(students) >=150
RETURN size(students) AS `Number of Students`, c.name AS Country  


// Find how many students in the database
MATCH (s:Student)
RETURN count(s)


// Find how many students have signed up to the newsletter
MATCH (s:Student {newsletter: 'YES'})
RETURN count(s)

// Find how many students have studied in aboard
MATCH (s:Student) - [:STUDIED_ABROAD_IN] -> (c:Country)
RETURN count(s)


// Find what is the most common GPA score
MATCH (s:Student) - [r:OBTAINED] -> (:Grade)
WITH collect(s) AS students, r.gpa AS gpa
RETURN size(students) AS common, gpa ORDER BY common DESC


// Find how many students from Georgia have gotten an A grade in Animation 
MATCH (s:Student) - [:FROM] -> (:State {name: 'Georgia'}),
      (s) - [:STUDIED] -> (:Program {name: 'Animation'}),
      (s) - [:OBTAINED] -> (:Grade {grade: 'A'})
RETURN count(s) 